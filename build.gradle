apply plugin: "java"

repositories{
    mavenCentral()
    maven{url 'https://www.jitpack.io'}
}

ext{
    mindustryVersion = 'v122.1'
    sdkVersion = '30'
    sdkRoot = System.getenv("ANDROID_HOME")

    doExec = {cmd ->
        def proc = cmd.execute(null, new File("$buildDir/libs"))
        proc.waitForProcessOutput(System.out, System.err)
    }
}

dependencies{
    compileOnly "com.github.Anuken.Arc:arc-core:$mindustryVersion"
    compileOnly "com.github.Anuken.Mindustry:core:$mindustryVersion"
}

allprojects{
    tasks.withType(JavaCompile){
        if(JavaVersion.current() != JavaVersion.VERSION_1_8){
            options.compilerArgs.addAll(['--release', '8'])
        }
    }
}

task jarAndroid{
    dependsOn "jar"

    doLast{
        def files = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList() + [new File("$sdkRoot/platforms/android-$sdkVersion/android.jar")])
        def dependencies = files.collect{"--classpath $it.path"}.join(" ")

        if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
            doExec("cmd.exe /c d8 $dependencies --min-api 14 --output ${project.archivesBaseName}Android.jar ${project.archivesBaseName}Desktop.jar")
        }else{
            doExec("d8 $dependencies --min-api 14 --output ${project.archivesBaseName}Android.jar ${project.archivesBaseName}Desktop.jar")
        }
    }
}

jar{
    archiveFileName = "${project.archivesBaseName}Desktop.jar"

    from{configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}}
}

task deploy(type: Jar){
    dependsOn jarAndroid
    dependsOn jar
    archiveFileName = "${project.archivesBaseName}.jar"

    from{[zipTree("$buildDir/libs/${project.archivesBaseName}Desktop.jar"), zipTree("$buildDir/libs/${project.archivesBaseName}Android.jar")]}

    doLast{
        delete{delete "$buildDir/libs/${project.archivesBaseName}Desktop.jar"}
        delete{delete "$buildDir/libs/${project.archivesBaseName}Android.jar"}
    }
}
